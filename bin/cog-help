#!/bin/bash

# Set tabs space
tabs 4

# Color Format
#GREEN='\033[0;32m'
#YELLOW='\033[0;33m'
#BLUE='\033[0;34m'
#BOLD='\033[0;22m'
#NC='\033[0m' # No Color

# Default help screen
echo '
  MMMMMMMMMMMMMMM   MMMMMMMMMMMMMMM
    MMMMMMMMMMN       MMMMMMMMMMN
     NMMMMMMMM    MMMMMMMMMMMMMM
     NMMMMMMMM  MMMMMMMMMMMMMMMM
     NMMMMMMMM    MMMMMMMMMMMMMM
    MMMMMMMMMMN       MMMMMMMMMMN
  MMMMMMMMMMMMMMM   MMMMMMMMMMMMMMM
'
echo -e "${MAGENTA}Built-in Commands${NC}"
echo ""
echo -e "${YELLOW}Usage:${NC}"
echo -e "\tcommand [options] [arguments]"
echo ""
echo -e "${YELLOW}Available commands:${NC}"
echo -e "\t${GREEN}go${NC}             Run the project at localhost:${WEBSERVER_PORT:-8000}."
echo -e "\t ${BLUE}-h, --host${NC} <host> "
echo -e "\t ${BLUE}-p, --port${NC} <port> "
echo -e "\t ${BLUE}-d, --dir${NC} <directory> "
echo ""
echo -e "\t${GREEN}make${NC}           Run the make command"
echo -e "\t ${BLUE}:script${NC}       Pass in the name argument to create a new script"
echo -e "\t ${BLUE}:env${NC}          Creates a .env file for your project"
echo ""
echo -e "\t${GREEN}serve${NC}          Create localhost tunnel with ngrok"
echo ""
echo -e "\t${GREEN}git-backup${NC}     Git clone a remote repository to a local folder and then checkout all remote branches so you have a complete backup"
echo ""
echo -e "\t${GREEN}compile${NC}        Run the default preprocessor task (gulp compile, grunt compile, etc.)."
echo ""
echo -e "\t${GREEN}config${NC}         Create the ~/.cogconfig file if it does not exists."
echo ""
echo -e "\t${GREEN}convert${NC}        Converts any .mov and .mp4 files into .gif"
echo ""
echo -e "\t${GREEN}watch${NC}          Run the default preprocessor watch task (gulp watch, grunt watch, etc.)."
echo ""
echo -e "\t${GREEN}tag${NC}            Create git tags [${BLUE} major | minor | patch | push${NC}]"
echo ""
echo -e "\t${GREEN}update${NC}         Create git tags [${BLUE} major | minor | patch | push${NC}]"
echo ""
echo -e "\t${GREEN}ssl-check${NC}      Outputs info and runs some validity checks on a domain's SSL certificate"
echo ""
#echo "Visit https://github.com/happycog/cog/ to learn more about cog."

#TODO
#Add abilty to search local bin for new commands

# split the plugin directories variable by comma
IFS=, read -a plugin_directories <<< "$COG_PLUGIN_DIRECTORIES"

for bin_dir in "${plugin_directories[@]}"
do
	if [ -f ${bin_dir}/.cog-help ]; then
    	( set -a; source .env &> /dev/null; "${bin_dir}/.cog-help" "${@}")
    fi
done