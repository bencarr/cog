#!/bin/bash
# Set tabs space
tabs 4

# Color Format
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
BOLD='\033[0;22m'
NC='\033[0m' # No Color
descriptionSpacing=10;

displayGlobalCommands() {
  echo -e "${YELLOW}Global commands:${NC}"
  echo ""
  for file in $COG_DIRECTORY/bin/*; do
    base_file=$(basename "$file");
    # Ignore specific scripts
    if [[ "$base_file" == "cog" ]] || [[ "$base_file" == "cog-help" ]] || [[ "$base_file" == "cog-ssl-check" ]]; then
      continue
    fi

    COG_COMMAND=$(sed -e 's#.*-\(\)#\1#' <<< "$base_file");
    COG_DESCRIPTION=$(sed -n 's/# Description: //p' $file);
    # nameLength ${#COG_COMMAND};
    echo -e "\t${GREEN}$COG_COMMAND${NC}        $COG_DESCRIPTION";
    echo "";
  done
}

displayProjectCommands() {
  if [ -d "$PWD/bin" ]; then
    echo -e "${YELLOW}Project commands:${NC}"
    echo ""
    for file in $PWD/bin/*; do
      base_file=$(basename "$file");
      COG_COMMAND=$(sed -e 's#.*-\(\)#\1#' <<< "$base_file");
      COG_DESCRIPTION=$(sed -n 's/# Description: //p' $file);
      echo -e "\t${GREEN}$COG_COMMAND${NC}        $COG_DESCRIPTION";
      echo "";
    done
  fi
}

# Create even spacing for description
nameLength() {
  length=$1;

  if  (( $length > $descriptionSpacing )); then 
    descriptionSpacing=$length;
  fi
}


# Default help screen
echo '
  MMMMMMMMMMMMMMM   MMMMMMMMMMMMMMM
    MMMMMMMMMMN       MMMMMMMMMMN
     NMMMMMMMM    MMMMMMMMMMMMMM
     NMMMMMMMM  MMMMMMMMMMMMMMMM
     NMMMMMMMM    MMMMMMMMMMMMMM
    MMMMMMMMMMN       MMMMMMMMMMN
  MMMMMMMMMMMMMMM   MMMMMMMMMMMMMMM
'
displayGlobalCommands;
displayProjectCommands;
echo ""
echo ""
echo "Visit https://github.com/happycog/cog/ to learn more about cog."